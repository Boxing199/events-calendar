{"version":3,"sources":["components/Calendar/Calendar.js","actions/index.js","actions/actionTypes.js","containers/CalendarContainer.js","components/CalendarNav/CalendarNav.js","containers/CalendarNavContainer.js","components/CalendarEvent/CalendarEvent.js","containers/CalendarEventContainer.js","App.js","containers/AppContainer.js","reducers/data.js","serviceWorker.js","index.js"],"names":["Calendar","_this","this","today","props","currentMonth","currentYear","startCurrentMonth","Date","lastDate","getDate","currentMonthDays","emptyBlocks","i","getDay","push","date","day","react_default","a","createElement","id","className","map","block","index","key","monthDay","getMonth","getFullYear","onClick","openWindow","getSelectedDay","React","Component","getNextMonth","type","getPrevMonth","getThisMonth","mapDispatchToProps","CalendarContainer","connect","state","CalendarNav","CalendarNavContainer","CalendarEvent","eventDesc","_this2","selectedDayYear","selectedDay","selectedDayMonth","selectedDayDate","eventWindow","placeholder","value","onChange","e","setState","target","undefined","events","event","closeWindow","saveEvent","CalendarEventContainer","App","months","toString","slice","containers_CalendarNavContainer","containers_CalendarContainer","containers_CalendarEventContainer","AppContainer","initialState","data","arguments","length","action","Object","objectSpread","defineProperty","concat","toConsumableArray","Boolean","window","location","hostname","match","configureStore","createStore","__webpack_require__","d","__webpack_exports__","src_store","store","ReactDOM","render","es","containers_AppContainer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62811f9c.chunk.js","sourcesContent":["import React from 'react';\n\nclass Calendar extends React.Component {\n  render() {\n    const today = this.props.today;\n    const currentMonth = this.props.currentMonth;\n    const currentYear = this.props.currentYear;\n    const startCurrentMonth = new Date(currentYear, currentMonth);\n    const endCurrentMonth = new Date(currentYear, currentMonth+1, 0);\n    const lastDate = endCurrentMonth.getDate();\n    const currentMonthDays = [];\n    const emptyBlocks = [];\n    for (let i = 1; i < getDay(startCurrentMonth); i++) {\n      emptyBlocks.push('');\n    };\n    for (let i = 1; i<=lastDate; i++) {\n      currentMonthDays.push(new Date(currentYear, currentMonth, i))\n    };\n    function getDay(date) {\n      let day = date.getDay();\n      if (day === 0) day = 7;\n        return day;\n    }\n  return (\n      <div id=\"calendar\">\n        <div className=\"weekDay\">пн</div>\n        <div className=\"weekDay\">вт</div>\n        <div className=\"weekDay\">ср</div>\n        <div className=\"weekDay\">чт</div>\n        <div className=\"weekDay\">пт</div>\n        <div className=\"weekDay\">сб</div>\n        <div className=\"weekDay\">вс</div>\n        {emptyBlocks.map((block, index)=>(\n          <div \n            className=\"empty\" \n            key={index}\n          >\n            {block}\n          </div>\n        ))}\n        {currentMonthDays.map((monthDay, index) => (\n          <div \n            key={index}\n            className={(monthDay.getDate() === today.getDate() && monthDay.getMonth() === today.getMonth() && monthDay.getFullYear() === today.getFullYear()) ? 'day currentDay' : 'day'}\n          >\n            <span \n              className={(monthDay.getDate() === today.getDate() && monthDay.getMonth() === today.getMonth() && monthDay.getFullYear() === today.getFullYear()) ? 'date currentDate' : 'date'}\n              onClick={()=>(this.props.openWindow() && this.props.getSelectedDay(monthDay))}\n            >\n              {monthDay.getDate()}\n            </span>\n          </div>\n        ))}\n      </div>\n  );\n  }\n}\n\nexport default Calendar;","import * as type from './actionTypes';\n\nexport const getNextMonth = () => ({\n    type: type.NEXT_MONTH,\n});\n\nexport const getPrevMonth = () => ({\n    type: type.PREV_MONTH,\n});\n\nexport const getThisMonth = () => ({\n    type: type.THIS_MONTH,\n});\n\nexport const openWindow = () => ({\n    type: type.OPEN_WINDOW,\n});\n\nexport const closeWindow = () => ({\n    type: type.CLOSE_WINDOW,\n});\n\nexport const getSelectedDay = (monthDay) => ({\n    type: type.SELECTED_DAY,\n    monthDay,\n});\n\nexport const saveEvent = (eventDesc) => ({\n    type: type.SAVE_EVENT,\n    eventDesc,\n})","export const NEXT_MONTH = 'NEXT_MONTH';\nexport const PREV_MONTH = 'PREV_MONTH';\nexport const THIS_MONTH = 'THIS_MONTH';\nexport const OPEN_WINDOW = 'OPEN_WINDOW';\nexport const CLOSE_WINDOW = 'CLOSE_WINDOW';\nexport const SELECTED_DAY = 'SELECTED_DAY';\nexport const SAVE_EVENT = 'SAVE_EVENT';","import { connect } from 'react-redux';\nimport Calendar from '../components/Calendar/Calendar';\nimport { \n  getNextMonth,\n  getPrevMonth,\n  getThisMonth,\n  openWindow,\n  getSelectedDay,\n} from '../actions/index';\n\nconst mapStateToProps = state => ({\n  today: state.today,\n  currentMonth: state.currentMonth,\n  currentYear: state.currentYear,\n});\nconst mapDispatchToProps = {\n  getNextMonth,\n  getPrevMonth,\n  getThisMonth,\n  openWindow,\n  getSelectedDay,\n};\nexport const CalendarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Calendar);\n\nexport default CalendarContainer;\n","import React from 'react';\n\nclass CalendarNav extends React.Component {\n  render() {\n    return (\n      <nav className=\"calendar-nav\">\n        <button className=\"calendar-nav-btn\" onClick={()=>(this.props.getPrevMonth())}>&#9668; prev</button>\n        <button className=\"calendar-nav-btn\" onClick={()=>(this.props.getThisMonth())}>&#8226; current month &#8226;</button>\n        <button className=\"calendar-nav-btn\" onClick={()=>(this.props.getNextMonth())}>next &#9658;</button>\n      </nav>\n    );\n  }\n}\n\nexport default CalendarNav;","import { connect } from 'react-redux';\nimport CalendarNav from '../components/CalendarNav/CalendarNav';\nimport { \n  getNextMonth,\n  getPrevMonth,\n  getThisMonth,\n} from '../actions/index';\nconst mapStateToProps = state => ({\n});\nconst mapDispatchToProps = {\n  getNextMonth,\n  getPrevMonth,\n  getThisMonth,\n};\nexport const CalendarNavContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CalendarNav);\n\nexport default CalendarNavContainer;\n","import React from 'react';\n\nclass CalendarEvent extends React.Component {\n    state = { eventDesc: '' };\n    render() {\n      const selectedDayYear = (this.props.selectedDay !== null) ? this.props.selectedDay.getFullYear() : null;\n      const selectedDayMonth = (this.props.selectedDay !== null) ? this.props.selectedDay.getMonth() + 1 : null;\n      const selectedDayDate = (this.props.selectedDay !== null) ? this.props.selectedDay.getDate() : null;\n    const clearState = () => {\n      this.setState({ eventDesc: ''})\n    }\n    return (\n        <div className={(this.props.eventWindow === \"closed\") ? \"calendar-event-wrap display-none\" : \"calendar-event-wrap\"}>\n            <div className=\"calendar-event\"> \n            <input \n              className=\"calendar-event-input\" \n              type=\"text\" \n              placeholder=\"please enter an event description ...\"\n              value={this.state.eventDesc}\n              onChange={ e => this.setState({ eventDesc: e.target.value })} \n            />\n                <h2 className=\"subtitle calendar-event-subtitle\"> Events list</h2>\n                <ul className=\"calendar-event-list\">\n                  {(this.props.events[selectedDayYear] !== undefined) ? \n                    (this.props.events[selectedDayYear][selectedDayMonth] !== undefined) ? \n                      (this.props.events[selectedDayYear][selectedDayMonth][selectedDayDate] !== undefined) ? this.props.events[selectedDayYear][selectedDayMonth][selectedDayDate].map((event, index) => (\n                        <li \n                          className=\"calendar-event-list-item\"\n                          key={index}  \n                        >\n                        {event}\n                       </li>\n                  )) : null : null : null}\n                </ul>\n                <nav className=\"calendar-nav\">\n                    <button \n                      className=\"calendar-nav-btn\"\n                      onClick={()=>this.props.closeWindow()}  \n                    >&#215; cancel</button>\n                    <button \n                      className=\"calendar-nav-btn\"\n                      onClick={(this.state.eventDesc !== '') ? ()=>(this.props.saveEvent(this.state.eventDesc) && this.props.closeWindow() && clearState()) : null}\n                    >&#10003; save</button>\n                </nav>        \n            </div> \n        </div>\n        );\n    }\n}\n\nexport default CalendarEvent;","import { connect } from 'react-redux';\nimport CalendarEvent from '../components/CalendarEvent/CalendarEvent';\nimport { \n  closeWindow,\n  saveEvent,\n} from '../actions/index';\n\nconst mapStateToProps = state => ({\n  eventWindow: state.eventWindow,\n  events: state.events,\n  selectedDay: state.selectedDay,\n});\nconst mapDispatchToProps = {\n  closeWindow,\n  saveEvent,\n};\nexport const CalendarEventContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CalendarEvent);\n\nexport default CalendarEventContainer;\n","import React from 'react';\nimport CalendarContainer from './containers/CalendarContainer';\nimport CalendarNavContainer from './containers/CalendarNavContainer';\nimport CalendarEventContainer from './containers/CalendarEventContainer';\n\nclass App extends React.Component {\n  render() {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September','October', 'Novembe', 'December'];\n    return (\n      <div className=\"wrapper\">\n        <main className=\"main\">\n          <div className=\"content\">\n            <div className=\"inner\">\n              <h2 className=\"title\">{this.props.today.toString().slice(0,16)}</h2>\n              <CalendarNavContainer />\n              <p className=\"subtitle\">{(this.props.today.getFullYear() === this.props.currentYear) ? months[this.props.currentMonth] : months[this.props.currentMonth] + ' ' + this.props.currentYear}</p>\n              <CalendarContainer />\n            </div>\n          </div>\n          <CalendarEventContainer />\n        </main>  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from '../App';\n\nconst mapStateToProps = state => ({\n  today: state.today,\n  currentMonth: state.currentMonth,\n  currentYear: state.currentYear,\n  selectedDay: state.selectedDay,\n});\n\nexport const AppContainer = connect(\n  mapStateToProps,\n)(App);\n\nexport default AppContainer;\n","import * as type from '../actions/actionTypes';\n\nexport const initialState = {\n  today: new Date(),\n  currentMonth: new Date().getMonth(),\n  currentYear: new Date().getFullYear(),\n  eventWindow: \"closed\",\n  selectedDay: null,\n  events: {},\n};\nexport const data = (state = initialState, action) => {\n  switch (action.type) {\n    case type.NEXT_MONTH:\n      if (state.currentMonth === 11) {\n        return { ...state, currentMonth: 0, currentYear: state.currentYear+1 };\n      }\n      return { ...state, currentMonth: state.currentMonth+1 };\n    case type.PREV_MONTH:\n        if (state.currentMonth === 0) {\n          return { ...state, currentMonth: 11, currentYear: state.currentYear-1 };\n        }\n      return { ...state, currentMonth: state.currentMonth-1 };\n    case type.THIS_MONTH:\n      return { ...state, currentMonth: state.today.getMonth(), currentYear: state.today.getFullYear() };\n    case type.OPEN_WINDOW:\n      return { ...state, eventWindow: \"open\" };\n    case type.CLOSE_WINDOW:\n      return { ...state, eventWindow: \"closed\" };\n    case type.SELECTED_DAY:\n      return { ...state, selectedDay: action.monthDay };\n    case type.SAVE_EVENT:\n      const selectedDayYear = state.selectedDay.getFullYear();\n      const selectedDayMonth = state.selectedDay.getMonth()+1;\n      const selectedDayDate = state.selectedDay.getDate();\n      if(state.events[selectedDayYear] === undefined) {\n        return { ...state, events: { ...state.events, [selectedDayYear]: {\n            [selectedDayMonth]: {\n              [selectedDayDate]: [action.eventDesc],\n              }\n            }\n          }\n        };\n      } else if (state.events[selectedDayYear][selectedDayMonth] === undefined) {\n          return { ...state, events: { ...state.events, [selectedDayYear]: { ...state.events[selectedDayYear],\n              [selectedDayMonth]: {\n                [selectedDayDate]: [action.eventDesc]  \n                }            \n              }\n            }\n          };\n        } else if (state.events[selectedDayYear][selectedDayMonth][selectedDayDate] === undefined) {\n            return { ...state, events: { ...state.events, [selectedDayYear]: { ...state.events[selectedDayYear],\n                [selectedDayMonth] : { ...state.events[selectedDayYear][selectedDayMonth],\n                    [selectedDayDate] : [action.eventDesc]\n                  }\n                }\n              }\n            };\n          }\n      return { ...state, events: { ...state.events, [selectedDayYear]: { ...state.events[selectedDayYear],\n        [selectedDayMonth] : { ...state.events[selectedDayYear][selectedDayMonth],\n            [selectedDayDate] :  [...state.events[selectedDayYear][selectedDayMonth][selectedDayDate], action.eventDesc]\n          }\n        }\n      }\n      }; \n    default:\n      return state;\n  }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './containers/AppContainer';\nimport { createStore } from 'redux';\nimport { data } from './reducers/data';\nimport { initialState } from './reducers/data';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/reset.css';\nimport './styles/normalize.css';\nimport './styles/index.css';\n\nexport function configureStore() {\n    const store = createStore(data, initialState);\n    return store;\n  }\nexport const store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}